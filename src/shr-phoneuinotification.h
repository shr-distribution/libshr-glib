/* File:       shr-phoneuinotification.h
 *
 * GType name: PhoneuiNotification
 * D-Bus name: org.shr.phoneui.Notification
 *
 * Generated by GDBus Binding Tool 0.1. DO NOT EDIT.
 */

#ifndef __SHR_PHONEUI_NOTIFICATION_H__
#define __SHR_PHONEUI_NOTIFICATION_H__

#include <gio/gio.h>
#include <gdbusinterface.h>
#include <gdbusobjectproxy.h>
#include <gdbusproxymanager.h>
#include <gdbusobject.h>
#include <gdbusobjectmanager.h>
#include <gdbuscodegen-enumtypes.h>
#include <string.h>
#include <shr-types.h>

G_BEGIN_DECLS

#define TYPE_PHONEUI_NOTIFICATION         (phoneui_notification_get_gtype ())
#define PHONEUI_NOTIFICATION(o)           (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_PHONEUI_NOTIFICATION, PhoneuiNotification))
#define IS_PHONEUI_NOTIFICATION(o)        (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_PHONEUI_NOTIFICATION))
#define PHONEUI_NOTIFICATION_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE((o), TYPE_PHONEUI_NOTIFICATION, PhoneuiNotificationIface))

/**
 * PhoneuiNotification:
 *
 * Opaque type representing a proxy or an exported object.
 */
typedef struct _PhoneuiNotification PhoneuiNotification; /* Dummy typedef */
/**
 * PhoneuiNotificationIface:
 * @parent_iface: The parent interface.
 * @handle_display_sim_auth: Handler for the #PhoneuiNotification::handle-display-sim-auth signal.
 * @handle_hide_sim_auth: Handler for the #PhoneuiNotification::handle-hide-sim-auth signal.
 * @handle_display_ussd: Handler for the #PhoneuiNotification::handle-display-ussd signal.
 * @handle_display_dialog: Handler for the #PhoneuiNotification::handle-display-dialog signal.
 * @handle_feedback_action: Handler for the #PhoneuiNotification::handle-feedback-action signal.
 *
 * Virtual table.
 */
typedef struct _PhoneuiNotificationIface PhoneuiNotificationIface;

GType phoneui_notification_get_gtype (void) G_GNUC_CONST;
GDBusInterfaceInfo *phoneui_notification_interface_info (void);

/**
 * GET_PHONEUI_NOTIFICATION:
 * @object_proxy: A #GDBusObjectProxy.
 *
 * Convenience macro to get a #PhoneuiNotification interface proxy from @object_proxy.
 *
 * Returns: A #GDBusProxy object implementing the #PhoneuiNotification interface or %NULL if @object_proxy
 * does not implement the <literal>org.shr.phoneui.Notification</literal> D-Bus interface.
 * The returned reference must be released with g_object_unref().
 */
#define GET_PHONEUI_NOTIFICATION(object_proxy) (g_dbus_object_proxy_lookup_with_typecheck (object_proxy, "org.shr.phoneui.Notification", TYPE_PHONEUI_NOTIFICATION))

/**
 * PEEK_PHONEUI_NOTIFICATION:
 * @object_proxy: A #GDBusObjectProxy.
 *
 * Like GET_PHONEUI_NOTIFICATION() but doesn't increase the reference count on the returned object.
 *
 * <note><para>This macro is not safe to use outside the thread where the #GDBusProxyManager for @object_proxy was constructed in.</para></note>
 *
 * Returns: A #GDBusProxy object implementing the #PhoneuiNotification interface or %NULL if @object_proxy
 * does not implement the <literal>org.shr.phoneui.Notification</literal> D-Bus interface.
 * Do not free the returned object, it is owned by @object_proxy..
 */
#define PEEK_PHONEUI_NOTIFICATION(object_proxy) (g_dbus_object_proxy_peek_with_typecheck (object_proxy, "org.shr.phoneui.Notification", TYPE_PHONEUI_NOTIFICATION))


/* ---------------------------------------------------------------------- */

typedef struct _PhoneuiNotificationProxy PhoneuiNotificationProxy;
typedef struct _PhoneuiNotificationProxyClass PhoneuiNotificationProxyClass;

/**
 * PhoneuiNotificationProxyPrivate:
 *
 * The #PhoneuiNotificationProxyPrivate structure contains only private data.
 */
typedef struct _PhoneuiNotificationProxyPrivate PhoneuiNotificationProxyPrivate;

/**
 * PhoneuiNotificationProxy:
 *
 * The #PhoneuiNotificationProxy structure contains only private data and
 * should only be accessed using the provided API.
 */
struct _PhoneuiNotificationProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  PhoneuiNotificationProxyPrivate *priv;
};

/**
 * PhoneuiNotificationProxyClass:
 *
 * Class structure for #PhoneuiNotificationProxy.
 */
struct _PhoneuiNotificationProxyClass
{
  /*< private >*/
  GDBusProxyClass parent_class;
};

#define TYPE_PHONEUI_NOTIFICATION_PROXY (phoneui_notification_proxy_get_type ())
GType phoneui_notification_proxy_get_type (void) G_GNUC_CONST;

void phoneui_notification_proxy_new (GDBusConnection     *connection,
                   GDBusProxyFlags      flags,
                   const gchar         *name,
                   const gchar         *object_path,
                   GCancellable        *cancellable,
                   GAsyncReadyCallback  callback,
                   gpointer             user_data);
PhoneuiNotification *phoneui_notification_proxy_new_finish (GAsyncResult  *res,
                        GError       **error);
PhoneuiNotification *phoneui_notification_proxy_new_sync (GDBusConnection     *connection,
                       GDBusProxyFlags      flags,
                       const gchar         *name,
                       const gchar         *object_path,
                       GCancellable        *cancellable,
                       GError             **error);

void phoneui_notification_proxy_new_for_bus (GBusType             bus_type,
                           GDBusProxyFlags      flags,
                           const gchar         *name,
                           const gchar         *object_path,
                           GCancellable        *cancellable,
                           GAsyncReadyCallback  callback,
                           gpointer             user_data);
PhoneuiNotification *phoneui_notification_proxy_new_for_bus_finish (GAsyncResult  *res,
                                 GError       **error);
PhoneuiNotification *phoneui_notification_proxy_new_for_bus_sync (GBusType             bus_type,
                               GDBusProxyFlags      flags,
                               const gchar         *name,
                               const gchar         *object_path,
                               GCancellable        *cancellable,
                               GError             **error);

/* ---------------------------------------------------------------------- */

typedef struct _PhoneuiNotificationStub PhoneuiNotificationStub;
typedef struct _PhoneuiNotificationStubClass PhoneuiNotificationStubClass;

/**
 * PhoneuiNotificationStubPrivate:
 *
 * The #PhoneuiNotificationStubPrivate structure contains only private data.
 */
typedef struct _PhoneuiNotificationStubPrivate PhoneuiNotificationStubPrivate;

/**
 * PhoneuiNotificationStub:
 *
 * The #PhoneuiNotificationStub structure contains only private data and
 * should only be accessed using the provided API.
 */
struct _PhoneuiNotificationStub
{
  /*< private >*/
  GObject parent_instance;
  PhoneuiNotificationStubPrivate *priv;
};

/**
 * PhoneuiNotificationStubClass:
 *
 * Class structure for #PhoneuiNotificationStub.
 */
struct _PhoneuiNotificationStubClass
{
  /*< private >*/
  GObjectClass parent_class;
};

#define TYPE_PHONEUI_NOTIFICATION_STUB (phoneui_notification_stub_get_type ())
GType phoneui_notification_stub_get_type (void) G_GNUC_CONST;

PhoneuiNotification *phoneui_notification_stub_new (void);


struct _PhoneuiNotificationIface
{
  GTypeInterface parent_iface;

  /* Signal handlers for handling D-Bus method calls: */
  gboolean (*handle_display_sim_auth) (
        PhoneuiNotification *object,
        GDBusMethodInvocation *invocation,
        gint status);
  gboolean (*handle_hide_sim_auth) (
        PhoneuiNotification *object,
        GDBusMethodInvocation *invocation,
        gint status);
  gboolean (*handle_display_ussd) (
        PhoneuiNotification *object,
        GDBusMethodInvocation *invocation,
        gint mode,
        const gchar *message);
  gboolean (*handle_display_dialog) (
        PhoneuiNotification *object,
        GDBusMethodInvocation *invocation,
        gint dialog);
  gboolean (*handle_feedback_action) (
        PhoneuiNotification *object,
        GDBusMethodInvocation *invocation,
        const gchar *action,
        const gchar *level);
};

/* C Bindings for properties */


/* D-Bus Methods */
void phoneui_notification_call_display_sim_auth (
        PhoneuiNotification *proxy,
        gint status,
        GCancellable *cancellable,
        GAsyncReadyCallback callback,
        gpointer user_data);

gboolean phoneui_notification_call_display_sim_auth_finish (
        PhoneuiNotification *proxy,
        GAsyncResult *res,
        GError **error);

gboolean phoneui_notification_call_display_sim_auth_sync (
        PhoneuiNotification *proxy,
        gint status,
        GCancellable *cancellable,
        GError **error);


void phoneui_notification_call_hide_sim_auth (
        PhoneuiNotification *proxy,
        gint status,
        GCancellable *cancellable,
        GAsyncReadyCallback callback,
        gpointer user_data);

gboolean phoneui_notification_call_hide_sim_auth_finish (
        PhoneuiNotification *proxy,
        GAsyncResult *res,
        GError **error);

gboolean phoneui_notification_call_hide_sim_auth_sync (
        PhoneuiNotification *proxy,
        gint status,
        GCancellable *cancellable,
        GError **error);


void phoneui_notification_call_display_ussd (
        PhoneuiNotification *proxy,
        gint mode,
        const gchar *message,
        GCancellable *cancellable,
        GAsyncReadyCallback callback,
        gpointer user_data);

gboolean phoneui_notification_call_display_ussd_finish (
        PhoneuiNotification *proxy,
        GAsyncResult *res,
        GError **error);

gboolean phoneui_notification_call_display_ussd_sync (
        PhoneuiNotification *proxy,
        gint mode,
        const gchar *message,
        GCancellable *cancellable,
        GError **error);


void phoneui_notification_call_display_dialog (
        PhoneuiNotification *proxy,
        gint dialog,
        GCancellable *cancellable,
        GAsyncReadyCallback callback,
        gpointer user_data);

gboolean phoneui_notification_call_display_dialog_finish (
        PhoneuiNotification *proxy,
        GAsyncResult *res,
        GError **error);

gboolean phoneui_notification_call_display_dialog_sync (
        PhoneuiNotification *proxy,
        gint dialog,
        GCancellable *cancellable,
        GError **error);


void phoneui_notification_call_feedback_action (
        PhoneuiNotification *proxy,
        const gchar *action,
        const gchar *level,
        GCancellable *cancellable,
        GAsyncReadyCallback callback,
        gpointer user_data);

gboolean phoneui_notification_call_feedback_action_finish (
        PhoneuiNotification *proxy,
        GAsyncResult *res,
        GError **error);

gboolean phoneui_notification_call_feedback_action_sync (
        PhoneuiNotification *proxy,
        const gchar *action,
        const gchar *level,
        GCancellable *cancellable,
        GError **error);



/* D-Bus Methods Completion Helpers */
void phoneui_notification_complete_display_sim_auth (
        PhoneuiNotification *object,
        GDBusMethodInvocation *invocation);


void phoneui_notification_complete_hide_sim_auth (
        PhoneuiNotification *object,
        GDBusMethodInvocation *invocation);


void phoneui_notification_complete_display_ussd (
        PhoneuiNotification *object,
        GDBusMethodInvocation *invocation);


void phoneui_notification_complete_display_dialog (
        PhoneuiNotification *object,
        GDBusMethodInvocation *invocation);


void phoneui_notification_complete_feedback_action (
        PhoneuiNotification *object,
        GDBusMethodInvocation *invocation);



/* D-Bus Signal Emission Helpers */

G_END_DECLS

#endif /* __SHR_PHONEUI_NOTIFICATION_H__ */
