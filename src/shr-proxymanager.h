/* File:       shr-proxymanager.h
 *
 * Generated by GDBus Binding Tool 0.1. DO NOT EDIT.
 */

#ifndef __SHR_PROXY_MANAGER_H__
#define __SHR_PROXY_MANAGER_H__

#include <gdbusinterface.h>
#include <gdbusobjectproxy.h>
#include <gdbusproxymanager.h>
#include <gdbusobject.h>
#include <gdbusobjectmanager.h>
#include <gdbuscodegen-enumtypes.h>
#include <shr-types.h>

G_BEGIN_DECLS

#define TYPE_PROXY_MANAGER         (_proxy_manager_get_type ())
#define PROXY_MANAGER(o)           (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_PROXY_MANAGER, ProxyManager))
#define PROXY_MANAGER_CLASS(k)     (G_TYPE_CHECK_CLASS_CAST((k), TYPE_PROXY_MANAGER, ProxyManagerClass))
#define PROXY_MANAGER_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_PROXY_MANAGER, ProxyManagerClass))
#define IS_PROXY_MANAGER(o)        (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_PROXY_MANAGER))
#define IS_PROXY_MANAGER_CLASS(k)  (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_PROXY_MANAGER))

typedef struct _ProxyManager        ProxyManager;
typedef struct _ProxyManagerClass   ProxyManagerClass;
typedef struct _ProxyManagerPrivate ProxyManagerPrivate;

/**
 * ProxyManager:
 *
 * The #ProxyManager structure contains private data and should
 * only be accessed using the provided API.
 */
struct _ProxyManager
{
  /*< private >*/
  GDBusProxyManager parent_instance;
  ProxyManagerPrivate *priv;
};

/**
 * ProxyManagerClass:
 * @parent_class: The parent class.
 *
 * Class structure for #ProxyManager.
 */
struct _ProxyManagerClass
{
  GDBusProxyManagerClass parent_class;
  /*< private >*/
};

GType proxy_manager_get_type () G_GNUC_CONST;

GDBusProxyTypeFunc proxy_manager_get_type_func (void);

void proxy_manager_new (
        GDBusConnection        *connection,
        GDBusProxyManagerFlags  flags,
        const gchar            *name,
        const gchar            *object_path,
        GCancellable           *cancellable,
        GAsyncReadyCallback     callback,
        gpointer                user_data);
GDBusProxyManager *proxy_manager_new_finish (
        GAsyncResult           *res,
        GError                **error);
GDBusProxyManager *proxy_manager_new_sync (
        GDBusConnection        *connection,
        GDBusProxyManagerFlags  flags,
        const gchar            *name,
        const gchar            *object_path,
        GCancellable           *cancellable,
        GError                **error);
void proxy_manager_new_for_bus (
        GBusType                bus_type,
        GDBusProxyManagerFlags  flags,
        const gchar            *name,
        const gchar            *object_path,
        GCancellable           *cancellable,
        GAsyncReadyCallback     callback,
        gpointer                user_data);
GDBusProxyManager *proxy_manager_new_for_bus_finish (
        GAsyncResult   *res,
        GError        **error);
GDBusProxyManager *proxy_manager_new_for_bus_sync (
        GBusType                bus_type,
        GDBusProxyManagerFlags  flags,
        const gchar            *name,
        const gchar            *object_path,
        GCancellable           *cancellable,
        GError                **error);

G_END_DECLS

#endif /* __SHR_PROXY_MANAGER_H__ */

